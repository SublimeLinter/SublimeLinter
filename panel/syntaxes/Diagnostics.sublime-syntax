%YAML 1.2
---
# [Subl]: https://www.sublimetext.com/docs/3/syntax.html
# [LSP]: https://github.com/Microsoft/language-server-protocol/blob/master/protocol.md
hidden: true
scope: output.lsp.diagnostics

variables:
  start_of_diag_body: ^\s+(?=\d)
  filename_and_colon: ^\s*(\S)\s+(.*)(:)$

contexts:
  main:
    - include: diagnostic-preamble
    - include: diagnostic-body

  diagnostic-preamble:
    - match: '{{filename_and_colon}}'
      captures:
        0: meta.diagnostic.preamble.lsp
        1: punctuation.section.diagnostics.preample.lsp
        2: string.unquoted.lsp
        3: punctuation.separator.lsp

  diagnostic-body:
    - match: '{{start_of_diag_body}}'
      push:
        - ensure-diag-meta-scope
        - expect-diag-message
        - expect-diag-type
        - expect-linter-type
        - expect-line-maybe-column

  ensure-diag-meta-scope:
    - meta_scope: meta.diagnostic.body.lsp
    - match: ""  # match the empty string
      pop: true

  expect-diag-message:
    # Various server-specific tokens may get special treatment here in the diag message.
    - include: pop-at-end

  expect-diag-type:
    # See: https://github.com/sublimehq/Packages/issues/1036
    # We use sublimelinter markup scopes too so that old color schemes can catch up.
    - include: pop-at-end
    - match: \berror\b
      scope: markup.deleted.lsp sublimelinter.mark.error markup.error.lsp
      pop: true
    - match: \bwarning\b
      scope: markup.changed.lsp sublimelinter.mark.warning markup.warning.lsp
      pop: true
    - match: \binfo\b
      scope: markup.inserted.lsp sublimelinter.gutter-mark markup.info.lsp
      pop: true

  expect-linter-type:
    - include: pop-at-end
    - match: \S+
      scope: comment.line.lsp
      pop: true

  expect-line-maybe-column:
    - include: pop-at-end
    - match: (\d+)(?:(:)(\d+))?
      captures:
        1: constant.numeric.integer.decimal.lsp
        2: punctuation.separator.lsp
        3: constant.numeric.integer.decimal.lsp
      pop: true

  pop-at-end:
    - match: $
      pop: true
